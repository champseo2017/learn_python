"""
1.แสดงการใช้ฟังค์ชั่น input() รับข้อมูลผ่านทางคีย์บอร์ด
2.แสดงการใช้ฟังค์ชั่น print() แสดงผลข้อมูล

"""
"""
first_name = input("กรุณาป้อนชื่อของคุณ : ")
last_name = input("กรุณาป้อนนามสกุลของคุณ : ")
age = input("กรุณาป้อนอายุของคุณ : ")
address = input("กรุณาป้อนที่อยู่ของคุณ : ")
education = input("กรุณาป้อนประวัติการศึกษา : ")
career = input("กรุณาป้อนอาชีพ : ")
favourite = input("กรุณาป้อนสิ่งที่ตัวเองชอบ : ")
not_like = input("กรุณาป้อนสิ่งที่ไม่ชอบ : ")
print("------------------------------------")
print("ชื่อของคุณ คือ :", first_name)
print("นามสกุลของคุณคือ :", last_name)
print("อายุของคุณคือ :", age)
print("ที่อยู่ของคุณคือ :", address)
print("ประวัติการศึกษาของคุณคือ :", education)
print("อาชีพของคุณคือ :", career)
print("สิ่งที่คุณชอบคือ :", favourite)
print("สิ่งที่คุณไม่ชอบคือ :", not_like)
"""

"""
การประกาศตัวแปร
ภาษษไพธอนไม่จำเป็นต้องกำหนดชนิดข้อมูลให้กับตัวแปร ตัวแปรที่ประกาศสร้างขึ้นมาใช้งาน
จะกำหนดค่าข้อมูลไว้ 
ในภาษาไพธอน เวอร์ชั่น 3 สามารถสร้างตัวแปรเป็นภาษาไทยได้
"""
"""
msg = "Python Programming" #ประกาศตัวแปร msg เป็นข้อมูลสายอัขระหรือ สตริง (String)
num = 2415 #ประกาศตัวแปร NUM เป็นข้อมูลชนิดจำนวนเต็ม (Integer)
score = 78.54 #ประกาศตัวแปร score เป็นชนิดข้อมูลทศนิยม (float)
grad = "" #ประกาศตัวแปร grad เก็บค่าว่าง
ปากกา = "สีแดง"
โทรศัพท์ = "Samsung"
print("ปากกา สี = ", ปากกา)
print("โทรศัพท์ ยี่ห้อ =", โทรศัพท์)
"""

"""
ตัวแปรชนิดค่าคงที่ ค่าคงที่คือ ตัวแปรที่สร้างขึ้นมาเก็บค่าข้อมูลที่จะไม่มีการเปลียนแปลง
ค่าในระหว่างการประมวลผล

"""
"""
pi = 3.14
area = pi * 5 * 5
circumference = 2 * pi * 10
print("พื้นที่วงกลม = ", area)
print("เส้นรอบวงกลม = ",circumference)
"""

"""
ชนิดข้อมูลจำนวนเต็ม ( Integer )
ชนิดข้อมูลจำนวนเต็มประกอบไปด้วยตัวเลขจำนวนเต็มบวกและตัวเลขจำนวนเต็มลบ
ในภาษาไพธอนไม่ได้กำหนดความยาวของชนิดข้อมูลจำนวนเต็ม นั้นหมายความว่าเราสามารถประกาศตัวแปรเก็บชนิดข้อมูลจำนวนเต็มให้มีความยาวเท่าไหร่ก็ได้
"""
"""
num1 = 99999; num2 = 77777;
print("ผลบวกของ num1 กับ num2 = ", num1 + num2);
print("ผลลบของ num1 กับ num2 = ", num1 - num2);
"""

"""
การแปลงเลขฐานสิบเป็นเลขฐานสอง ฐานแปดและฐานสิบหก
"""
"""
x = 6749
print("แปลงเลขฐานสิบเป็นฐานสอง = ", bin(x))
print("แปลงเลขฐานสิบเป็นฐานแปด =", oct(x))
print("แปลงเลขฐานสิบเป็นฐานสิบหก = ", hex(x))
"""

"""
การแปลงเลขฐานสอง ฐานแปด และฐานสิบหก เป็นเลขฐานสิบ
"""
"""
a = 0b100111011001
b = 0o6453
c = 0xAC41
print("แปลงเลขฐานสองเป็นฐานสิบ =", int(a))
print("แปลงเลขฐานแปดเป็นฐานสิบ =", int(b))
print("แปลงเลขฐานสิบหกเป็นฐานสิบ =", int(c))
"""

"""
การบวกเลขฐานสองและการแปลงผลลัพธ์จากการบวกเลขฐานสองเป็น ฐานสิบ
ฐานสอง ฐานแปด และ ฐานสิบหก
"""
"""
a = 0b1001011; b = 0b1101101
c = a + b
print("ผลบวกของ a กับ b =", c)
print("แปลงผลลัพธ์จากการบวก a กับ b เป็นเลขฐานสอง =", bin(c))
print("แปลงผลลัพธ์จากการบวก a กับ b เป็นเลขฐานแปด =", oct(c))
print("แปลงผลลัพธ์จากการบวก a กับ b เป็นเลขฐานสิบหก =", hex(c))
"""

"""
ชนิดข้อมูลจำนวนทศนิยม (Float)
ชนิดข้อมูลประเภทนี้ประกอบไปด้วยตัวเลข 2 ส่วน โดยมีเครื่องหมายจุด (.) คั่นระหว่างตัวเลขที่อยู่ด้านหน้า
และด้านหลัง ตัวเลขด้านหน้าเป็นตัวเลขจำนวนเต็ม และตัวเลขที่อยู่ด้านหลังจุดเรียกว่า ทศนิยม
แบบที่สอง E และ e ซึ้งเป็นการเขียนในรูปแบบของเลขยกกำลังสิบ (Exponential Form)

"""
"""
a = 341.451E-3; b = 251.147e-2; c = 758.457E5; x = 10.5; y = 17.5
d = a - b
z = x + y
print("ค่าตัวเลขจำนวนทศนิยมของ b = ", b)
print("ผลลัพธ์จากการลบ a กับ b = ", d)
print("ผลลัพธ์จากการบวก x กับ y = ", z)
"""

"""
ในกรณีที่ต้องการแปลงชนิดข้อมูลจำนวนเต็ม ให้เป็นชนิดข้อมูลจำนวนทศนิยม ให้ใช้ฟังค์ชั่น float()
"""
"""
a = 56
b = 55
c = float(a)
d = float(b)
x = c + d
y = c * d
print("ผลลัพธ์จากการแปลงค่า 56 = ", c)
print("ผลลัพธ์จากการแปลงค่า 55 = ", d)
print("ผลลัพธ์จากการแปลงค่า c + d = ", x)
print("ผลลัพธ์จากการแปลงค่า c * d = ", y)
"""

"""
ชนิดข้อมูลเชิงซ้อน ( Complex )
ภาษาไพธอนใช้ตัวอักษร j 
"""
"""
a = 20 + 5j; b = 15 + 6j; c = 6 - 7j
x = a + b
y = b * c
print("ผลลัพธ์การบวกระหว่าง a กับ b = ", x)
print("ผลลัพธ์การคูณระหว่าง b กับ c = ", y)
"""

"""
ชนิดข้อมูลตรรกะ (Boolean)
ให้ผลลัพธ์เพียงสองค่า คือ ค่าจริง (True) และ ค่าเท็จ (false)
เราสามารถกำหนดค่า True หรือ False ให้กับตัวแปรเพื่อนำไปเปรียบเทียบได้เลย
"""
"""
x = True; y = False; z = True
print("ผลการเปรียบเทียบ x == y หรือไม่ = ", x==y)
print("ผลการเปรียบเทียบ y == z หรือไม่ = ", y==z)
print("ผลการเปรียบเทียบ z == True หรือไม่ = ", z == True)
"""

"""
function bool() ตรวจสอบค่าข้อมูลในตัวแปร
" " = True ช่องว่าง 
"""
"""
b = ""; c = " "; n = None; num = 245
print("มีข้อมูลอยู่ในตัวแปร b หรือไม่ = ", bool(b))
print("มีข้อมูลอยู่ในตัวแปร c หรือไม่ = ", bool(c))
print("มีข้อมูลอยู่ในตัวแปร n หรือไม่ = ", bool(n))
print("มีข้อมูลอยู่ในตัวแปร num2 หรือไม่ = ", bool(num))
"""

"""
ชนิดข้อมูลสายอักขระหรือสตริง (String)
ชนิดข้อมูลสตริง การประกาศชนิดข้อมูลนี้ขึ้นมาใช้งานจะอยู่ในเครื่องหมาย "" double quote หรือ single quote '' 
ให้เลือกรูปแบบไดรูปแบบหนึ่ง
"""
"""
msg = "Python Programming"
msgl = 'Language'
print(msg)
print(msgl)
print(msg, " + ", msgl)
"""
"""
การแปลงชนิดข้อมูล ( Data Type Conversion )
บางครั้งเรามีความจำเป็นต้องแปลงชนิดข้อมูลก่อนนำไปดำเนินการ หากไม่มีการแปลงชนิดข้อมูลก่อนจะทำให้เกิดข้อผิดพลาดได้
"""
"""
num = int(input("กรุณาป้อนตัวเลขของคุณ : "))
x = "60"
y = int(x) + num
print("ผลลัพธ์จากการบวก x + num = ", y)
"""

"""
การกำหนดค่าให้กับตัวแปร
python สามารถประกาศตัวแปรหลายๆตัวแปรแล้วมีข้อมูลแค่ก้อนเดียวในตัวแปรเดียวได้
"""
"""
num_1 = num_2 = num_3 = 50
print("ค่าข้อมูลในตัวแปร num_1 =", num_1)
print("ค่าข้อมูลในตัวแปร num_2 =", num_2)
print("ค่าข้อมูลในตัวแปร num_3 =", num_3)
"""

"""
การสร้างตัวแปรหลายๆตัวแล้วคั่นด้วยเครื่องหมายคอมม่า และ ชนิดข้อมูลของตัวแปรจะเรียงลำดับตามคอมม่าที่คั่น
"""
"""
num1, num2, msg = 50, 100, "Hello World"
print("ค่าข้อมูลในตัวแปร num1 =", num1)
print("ค่าข้อมูลในตัวแปร num2 =", num2)
print("ค่าข้อมูลในตัวแปร msg =", msg)
"""

"""
การสร้างตัวแปรครั้งล่ะหลายๆ ตัว แค่แยกเก็บชนิดข้อมูลอยู๋ในบรรทัดเดียวกัน
"""
"""
x = 200; y = 300; msg = "Hello Python"
print("ค่าข้อมูลในตัวแปร x =", x)
print("ค่าข้อมูลในตัวแปร y =", y)
print("ค่าข้อมูลในตัวแปร msg=", msg)
"""

"""
การตรวจสอบชนิดข้อมูลด้วยฟังค์ชั่น type()
การพัฒนาโปรแกรมที่มีขนาดใหญ่และมีการประกาศสร้างตัวแปรไว้เป็นจำนวนมาก อาจจะมีการหลงลืม
ว่าตัวแปรเก็บข้อมูลประเภทใดไว้
"""
"""
msg = "Python Programming"
num = 254
float_ = 354.213
print(type(msg))
print(type(num))
print(type(float_))
"""

"""
การนำตัวดำเนินการทางคณิตศาสตร์ต่างๆ มาใช้ดำเนินการคำนวณหาผลลัพธ์
"""
"""
a = 5; b = 3;
z = a + b
print("ผลลัพธ์ของ a + b คือ ", z)
z = a - b
print("ผลลัพธ์ของ a - b คือ ", z)
z = a * b
print("ผลลัพธ์ของ a * b คือ ", z)
z = a / b
print("ผลลัพธ์ของ a / b ค่ือ ", z)
z = a % b
print("ผลลัพธ์ของ a % b คือ ", z)
z = a ** b
print("ผลลัพธ์ของ a ** b คือ ", z)
z = a // b
print("ผลลัพธ์ของ a // b คือ ", z)
"""
"""
ตัวดำเนินการการกำหนด่า
"""
"""
a = 5; b = 3
a = b
print("ผลลัพธ์ของ a = b : ", a)
a += b
print("ผลลัพธ์ของ a += b: ", a)
a -= b
print("ผลลัพธ์ของ a -= b : ", a)
"""

"""
การใช้ตัวดำเนินการตรรกศาสตร์ 
and จะได้ผลลัพธ์เป็น True เมื่อ p และ q เป็น True เท่านั้น
or จะได้ผลลัพธ์เป็น false เมื่อ p และ q เป็น false ทั้งสอง
not เปลียนค่าตรงข้าม True เป็น false และ false เป็น True

"""
"""
a = 5; b = 3; c = 15; z = 0
z = a == b and c < b
print("ผลลัพธ์ของ a == b and c < b คือ ", z)
z = a > b and a < c
print("ผลลัพธ์ของ a > b and a < c คือ ", z)
z = b > a or a > c
print("ผลลัพธ์ของ b > a or a > c คือ ", z)
z = not (a < c)
print("ผลลัพธ์ของ not (a < c) คือ ", z)
z = not (b > a or c < a)
print("ผลลัพธ์ของ not (b > a or c < a) คือ ", z) 
"""

"""
ตัวดำเนินการตรวจสอบสมาชิก
ใช้สำหรับดำเนินการเปรียบเทียบค้นหาค่าที่กำหนดในตัวแปรที่สนใจ ว่าเป็นสมาชิกในตัวแปรที่จะทำการเปรียบเทียบหรือไม่
in อยู่ใน คืนค่าเป็น false ถ้าเเกิดตัวแปรที่สนใจมีค่าในตัวแปรที่เปรียบเทียบได้ค่าตรงข้าม
not in ไม่อยู่ใน คืนค่าเป็น True ถ้าเเกิดตัวแปรที่สนใจมีค่าในตัวแปรที่เปรียบเทียบได้ค่าตรงข้าม
"""
"""
cars = ["Honda", "Toyota", "BMW", "Benz", "Nissan", "Mazda"]
my_car = "Ford"
z = my_car in cars
print("ผลลัพธ์ของ my_car in cars = ", z)
z = my_car not in cars
print("ผลลัพธ์ของ my_car not in cars = ", z)
"""







